@using GarageManagementSystem.ViewModels
@using Twilio.TwiML.Messaging
@model CustomerAppointmentsViewModel


@section Styles {
    <!-- FullCalendar CSS -->
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.2/main.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css">

    <style>
        /* Increase overall calendar size */
        #calendar {
        margin-bottom: 30px;
        padding: 15px;
        border-radius: 5px;
        background: #fff;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

        /* Make events more visible */
        .fc-event {
        padding: 2px 4px;
        margin: 1px 0;
        border-radius: 3px;
        font-size: 0.8em;
        cursor: pointer;
        }

        .fc-daygrid-day-frame {
        min-height: 100px;
        max-height: 150px;
        overflow-y: auto;
        }

        .fc-daygrid-day-top {
        padding: 3px;
        }

        .fc-event-title {
        white-space: normal;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        }

        /* Status badge styles */
        .status-badge {
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        }

        .status-approved {
        background-color: #1cc88a;
        color: white;
        }

        .status-pending {
        background-color: #f6c23e;
        color: white;
        }

        .status-rescheduled {
        background-color: #36b9cc;
        color: white;
        }

        .status-cancelled {
        background-color: #e74a3b;
        color: white;
        }

        .status-completed {
        background-color: #4e73df;
        color: white;
        }

        /* Action buttons spacing */
        .action-buttons .btn {
        margin-right: 5px;
        margin-bottom: 5px;
        }

        /* Responsive table adjustments */
        <style >
        @@media (max-width: 768px) {
            .responsive-class

        {
            display: none;
        }

        }
    </style>


}
@{
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
    ViewData["Title"] = "My Appointments";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>@ViewData["Title"] - Customer Appointments</title>

    <!-- Custom fonts for this template-->
    <link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- FullCalendar -->
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.2/main.min.css" rel="stylesheet">

    <style>
        /* Increase overall calendar size */
        #calendar {
            margin-bottom: 30px;
            padding: 15px;
            border-radius: 5px;
            background: #fff;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

        /* Make events more visible */
        .fc-event {
            padding: 2px 4px;
            margin: 1px 0;
            border-radius: 3px;
            font-size: 0.8em;
            cursor: pointer;
        }

        .fc-daygrid-day-frame {
            min-height: 100px;
            max-height: 150px;
            overflow-y: auto;
        }

        .fc-daygrid-day-top {
            padding: 3px;
        }

        .fc-event-title {
            white-space: normal;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

    </style>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #wrapper, #content-wrapper, #content {
            height: 100%;
            width: 100%;
        }
    </style>
</head>
    

    <div id="content">
        <div class="container-fluid">
        <!-- Page Heading -->
        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">My Appointments</h1>
            <a href="@Url.Action("BookAppointment", "Customer")" class="btn btn-primary btn-sm">
                <i class="fas fa-plus-circle"></i> Book Appointment
            </a>
        </div>


            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            <!-- Status Cards -->
            <div class="row mb-4">
                <!-- Pending Appointments Card -->
                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-warning shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                        Pending Appointments
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">
                                        @(Model.StatusCounts.TryGetValue("Pending", out int pendingCount) ? pendingCount : 0)
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-clock fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <!-- Rescheduled Appointments Card -->
                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-info shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                        Rescheduled
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">
                                        @(Model.StatusCounts.TryGetValue("Rescheduled", out int rescheduledCount) ? rescheduledCount : 0)
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-calendar-alt fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Completed Appointments Card -->
                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-primary shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                        Completed
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">
                                        @(Model.StatusCounts.TryGetValue("Completed", out int completedCount) ? completedCount : 0)
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-clipboard-check fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-5">
                <div class="col">
                    <div class="card shadow">
                        <div class="card-header bg-primary text-white">
                            <h4 class="mb-0">Upcoming Appointments</h4>
                        </div>
                        <div class="card-body">
                            <div id="calendar"></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Appointments List Card -->
            <div class="row mb-5">
                <div class="col">
                    <div class="card shadow">
                        <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                            <h4 class="mb-0">Appointments List</h4>
                            <div class="form-inline">
                                <label class="mr-2 text-white">Filter by status:</label>
                                <select id="statusFilter" class="form-control form-control-sm">
                                    <option value="all">All</option>
                                    <option value="Pending">Pending</option>
                                    <option value="Approved">Approved</option>
                                    <option value="Rescheduled">Rescheduled</option>
                                    <option value="Cancelled">Cancelled</option>
                                    <option value="Completed">Completed</option>
                                </select>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover" id="appointmentsTable">
                                    <thead>
                                        <tr>
                                            <th>Car</th>
                                            <th>Date</th>
                                            <th>Time</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var appointment in Model.Appointments)
                                        {
                                            <tr data-appointment-id="@appointment.Id">
                                                <td>@appointment.Car.Make @appointment.Car.Model (@appointment.Car.LicenseNumber)</td>
                                                <td>@appointment.AppointmentDate.ToString("yyyy-MM-dd")</td>
                                                <td>@appointment.AppointmentTime</td>
                                                <td>
                                                    <span class="status-badge @GetStatusClass(appointment.Status)">
                                                        @appointment.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="action-buttons">
                                                    <a href="@Url.Action("CustomerAppointmentDetails", "Customer", new { id = appointment.Id })"
                                                           class="btn btn-sm btn-info">
                                                            <i class="fas fa-eye"></i> Details
                                                        </a>


                                                        @if (appointment.Status != "Completed" && appointment.Status != "Cancelled")
                                                        {
                                                        <a href="@Url.Action("ProposeNewDate", "Customer", new { id = appointment.Id })"
                                                               class="btn btn-sm btn-primary">
                                                                <i class="fas fa-calendar-alt"></i> Reschedule
                                                            </a>
                                                        }

                                                    @if (appointment.Status != "Cancelled" && appointment.Status != "Completed")
                                                    {
                                                        <button type="button" class="btn btn-sm btn-danger cancel-btn"
                                                                data-id="@appointment.Id"
                                                                data-car="@appointment.Car.Make @appointment.Car.Model"
                                                                data-toggle="modal"
                                                                data-target="#cancelModal">
                                                            <i class="fas fa-times-circle"></i> Cancel
                                                        </button>
                                                    }

                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cancel Appointment Modal -->
    <div class="modal fade" id="cancelModal" tabindex="-1" role="dialog" aria-labelledby="cancelModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="cancelModalLabel">Cancel Appointment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            <form asp-action="CancelAppointment" asp-controller="Customer" method="post">
                <div class="modal-body">
                    <input type="hidden" id="cancelAppointmentId" name="id" />
                    <p>Are you sure you want to cancel the appointment for <span id="cancelCarInfo"></span>?</p>
                    <div class="form-group">
                        <label for="reason">Cancellation Reason:</label>
                        <textarea class="form-control" id="reason" name="reason" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Cancel Appointment</button>
                </div>
            </form>
            </div>
        </div>
    </div>

<!-- DataTables CDN (make sure you have it) -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css">
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>

    @functions {
        public string GetStatusClass(string status)
        {
            return status switch
            {
                "Approved" => "status-approved",
                "Pending" => "status-pending",
                "Rescheduled" => "status-rescheduled",
                "Cancelled" => "status-cancelled",
                "Completed" => "status-completed",
                _ => "status-pending"
            };
        }
    }

 @section Scripts {
    <!-- Load FullCalendar first -->
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.2/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
                if (typeof jQuery === 'undefined') {
            console.error('jQuery is not loaded');
        }
            document.addEventListener('DOMContentLoaded', function () {
                var calendarEl = document.getElementById('calendar');

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    height: 'auto',
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'
                    },
                    events: [
        @for (int i = 0; i < Model.Appointments.Count; i++)
        {
            var appointment = Model.Appointments[i];
            <text>
                                    {
                                        id: '@appointment.Id',
                                        title: '@appointment.Car.Make @appointment.Car.Model',
                                        start: '@appointment.AppointmentDate.ToString("yyyy-MM-dd")' + 'T' + '@appointment.AppointmentTime', // Ensure full date-time string
                                        description: 'Status: @appointment.Status',
                                        className: '@GetEventClass(appointment.Status)'
                                    }@(i < Model.Appointments.Count - 1 ? "," : "")
            </text>
        }
                    ],
                    eventClick: function (info) {
                        // Redirect to appointment details
                            window.location.href = '@Url.Action("CustomerAppointmentDetails", "Customer")/' + info.event.id;
                    },
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        hour12: true
                    }
                });

                calendar.render();

                // Initialize DataTable for appointments table
                       // Initialize DataTable for appointments table with deferred rendering
        if ($.fn.DataTable) {
            try {
                var appointmentsTable = $('#appointmentsTable').DataTable({
                    "order": [[1, "asc"], [2, "asc"]],
                    "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    "deferRender": true,
                    "stateSave": true
                });

                // Store reference to table globally
                window.appointmentsTable = appointmentsTable;

                console.log("DataTable initialized successfully");
            } catch (e) {
                console.error('DataTable initialization error:', e);
            }
        } else {
            console.error('DataTables plugin not found');
        }
                // Status filter functionality
                                // Status filter functionality
        // Status filter functionality
                // Alternative direct jQuery approach
        $('#statusFilter').change(function() {
            try {
                var status = $(this).val();
                console.log("Status filter changed to: " + status);

                // Direct DOM manipulation for filtering
                if (status === 'all') {
                    // Show all rows
                    $('#appointmentsTable tbody tr').show();
                } else {
                    // Hide all rows first
                    $('#appointmentsTable tbody tr').hide();

                    // Show only rows with matching status
                    $('#appointmentsTable tbody tr').each(function() {
                        var rowStatus = $(this).find('td:eq(3)').text().trim();
                        if (rowStatus === status) {
                            $(this).show();
                        }
                    });
                }

            } catch (e) {
                console.error('Status filter error:', e);
            }
        });

                // Debug what's in the status cells
        $('#appointmentsTable tbody tr td:nth-child(4)').each(function() {
            console.log("Status cell content:", $(this).text());
            console.log("Trimmed status:", $(this).text().trim());
        });
                // Handle modal data when cancel button is clicked
                $('.cancel-btn').click(function () {
                    var id = $(this).data('id');
                    var carInfo = $(this).data('car');
                    $('#cancelAppointmentId').val(id);
                    $('#cancelCarInfo').text(carInfo);
                });

                // Handle modal data when complete button is clicked
                $('.complete-btn').click(function () {
                    var id = $(this).data('id');
                    var carInfo = $(this).data('car');
                    $('#completeAppointmentId').val(id);
                    $('#completeCarInfo').text(carInfo);
                });

            });

        @functions {
        public string GetEventClass(string status)
        {
            string bgColor = status switch
            {
                "Approved" => "bg-success",
                "Pending" => "bg-warning",
                "Rescheduled" => "bg-info",
                "Cancelled" => "bg-danger",
                "Completed" => "bg-primary",
                _ => "bg-warning"
            };

            // Adjust text color to make it more visible against the background
            string textColor = status switch
            {
                "Approved" => "text-dark",    // Dark text on green background
                "Pending" => "text-dark",     // Dark text on yellow background
                "Rescheduled" => "text-dark", // Dark text on blue background
                "Cancelled" => "text-light",  // Light text on red background
                "Completed" => "text-light",  // Light text on blue background
                _ => "text-dark"              // Default dark text for other statuses
            };

            return $"{bgColor} {textColor}";
        }

    }
</script>
}

    


